---
- name: Setup Nginx svc
  hosts: localhost
  gather_facts: no
  tasks:
    - name: Install nginx
      apt:
        name: nginx
        state: present
        update_cache: yes
        cache_valid_time: 86400
      tags:
        - package

    - name: Start & ENable Nginx
      service:
        name: nginx
        state: started
        enabled: yes
      tags:
        - svc


  handlers:
    - name: Restart Nginx
      service:
        name: nginx
        state: restarted


- hosts: localhost
  become: true
  vars:
    container_count: 1
    default_container_name: node
    default_container_image: node
    default_container_command: "/bin/bash/"

  tasks:
    - name: Install aptitude
      apt:
        name: aptitude
        state: latest
        update_cache: true

    - name: Install required system packages
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip
          - virtualenv
          - python3-setuptools
        state: latest
        update_cache: true

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Update apt and install docker-ce
      apt:
        name: docker-ce
        state: latest
        update_cache: true

    - name: Install Docker Module for Python
      pip:
        name: docker
   
    - name: Pull default Docker image
      community.docker.docker_image:
        name: "{{ default_container_image }}"
        source: pull

    - name: Create default containers
      community.docker.docker_container:
        name: "{{ default_container_name }}{{ item }}"
        image: "{{ default_container_image  }}"
        command: "sudo docker run -it node /bin/bash"
        state: present
        ports:
        - "3000:80"
      with_sequence: count={{ container_count }}
